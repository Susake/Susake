#include <winsock2.h>
#include <stdio.h>
#include <process.h>
#pragma comment(lib, "ws2_32.lib")

int iPort = 5150;
HANDLE hThread, hThread1;
DWORD dwThreadId, dwThreadId1;

DWORD WINAPI ClientThread1(LPVOID lpParam)
{
    Sleep(1);
	SOCKET sock = (SOCKET)lpParam;
	char szBuff[4096];
	while (1)
	{
		scanf("%s", szBuff);
		send(sock, szBuff, strlen(szBuff), 0);
	}
	return 0;
}

DWORD WINAPI ClientThread(LPVOID lpParam)
{
    Sleep(1);
	SOCKET sock = (SOCKET)lpParam;
	char szBuff[4096];
	int ret;
	while (1)
	{
		ret = recv(sock, szBuff, 2048, 0);
		if (ret == SOCKET_ERROR)
		{
			printf("Failed to recv()%d\n", WSAGetLastError());
			break;
		}
		else
		{
			szBuff[ret] = '\0';
			printf("%s\n", szBuff);
		}
		hThread1 = CreateThread(NULL, 0, ClientThread1, (LPVOID)sock, 0, &dwThreadId1);
	}
	return 0;
}

int main(int argc, char *argv[])
{
	WSADATA wsd;
	SOCKET sock, sClient;
	struct sockaddr_in local, client;
	int iAddrSize;

	if (WSAStartup(MAKEWORD(2, 2), &wsd) != 0)
		printf("Failed to load Winsock %d\n", WSAGetLastError());

	sock = socket(AF_INET, SOCK_STREAM, 0);
	if (sock == SOCKET_ERROR)
		printf("Failed to load socket()%d\n", WSAGetLastError());

	local.sin_family = AF_INET;
	local.sin_port = htons(iPort);
	local.sin_addr.s_addr = htonl(INADDR_ANY);

	if (bind(sock, (struct sockaddr *)&local, sizeof(local)) == SOCKET_ERROR)
		printf("Failed to bind()%d\n", WSAGetLastError());

	listen(sock, 80);

	while (1)
	{
		iAddrSize = sizeof(client);
		sClient = accept(sock, (struct sockaddr *)&client, &iAddrSize);
		if (sClient == INVALID_SOCKET)
		{
			printf("Failed to accept()%d\n", WSAGetLastError());
			break;
		}

		hThread = CreateThread(NULL, 0, ClientThread, (LPVOID)sClient, 0, &dwThreadId);
		if (hThread == NULL)
		{
			printf("Failed to CreateThread()%d\n", GetLastError());
			break;
		}
	}

	closesocket(sClient);
	WSACleanup();
	return 0;
}
