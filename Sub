void Susake_sub(char *s1, char *s2) {
    int len, len1, len2, i, j;
    int a[N] = {0}, b[N] = {0};
    char s3[N];
    memset(s3, 0, sizeof(s3));
    char *s = (char *)malloc(10 * sizeof(char));
    s = Susake_com(s1, s2);
    if(strcmp("a<b", s) == 0) {
        strcpy(s3, s1);
        strcpy(s1, s2);
        strcpy(s2, s3);
        printf("-");
    }
    free(s);
    len1 = strlen(s1); len2 = strlen(s2);
    for(i = 0; i < len1; a[i] = s1[len1 - 1 - i++] - '0') ;
    for(i = 0; i < len2; b[i] = s2[len2 - 1 - i++] - '0') ;
    len = len1 > len2 ? len1 : len2;
    for(int i = 0; i < len; i++) {
        if(a[i] - b[i] >= 0) a[i] -= b[i];
        else {
            a[i] = a[i + 1] == 0 && i + 1 == len1 ? b[i] - a[i] : a[i] + 10 - b[i];
            a[i + 1]--;
        }
    }
    if(a[len - 1] || len == 1) printf("%d", a[len - 1]);
    for(int i = len - 2; i >= 0; i--) printf("%d", a[i]);
    printf("\n");
}
