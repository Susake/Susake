#include <winsock.h>
#include <stdio.h>
#include <process.h>
#pragma comment(lib,"ws2_32.lib")

int iPort = 5150;
HANDLE hThread;
DWORD dwThreadId;
char s[300], szServer[128];;

DWORD WINAPI ClientThread(LPVOID lpParam)
{
	SOCKET sock = (SOCKET)lpParam;

	char szBuff[4096];
	int ret;
	while (1)
	{
		ret = recv(sock, szBuff, 2048, 0);
		if (ret == SOCKET_ERROR)
		{
			printf("Failed to recv()%d\n", WSAGetLastError());
			break;
		}
		else
		{
			szBuff[ret] = '\0';
			printf("%s\n", szBuff);
		}
	}
	return 0;
}

int main(int argc, char *argv[])
{
    WSADATA wsd;
	SOCKET sock;
	struct sockaddr_in sa;
	struct hostent *host = NULL;

	if (WSAStartup(MAKEWORD(2, 2), &wsd) != 0)
		printf("Unable to load Winsock library!\n");

	sock = socket(AF_INET, SOCK_STREAM, 0);
	if (sock == INVALID_SOCKET)
		printf("socket() failed: %d\n", WSAGetLastError());
	else
		printf("socket() created: %d\n", sock);

	sa.sin_family = AF_INET;
	sa.sin_addr.S_un.S_addr = inet_addr(szServer);
	sa.sin_port = htons(iPort);

	printf("Connected to 132.163.4.102....\n");

	if (sa.sin_addr.s_addr == INADDR_NONE)
	{
		host = gethostbyname(szServer);
		if (host == NULL)
		{
			printf("Unable to resolve server: %s\n", szServer);
			return 1;
		}
		CopyMemory(&sa.sin_addr, host->h_addr_list[0], host->h_length);
	}

	if (connect(sock, (SOCKADDR *)&sa, sizeof (sa)) == 0)
		printf("Connected to 132.163.4.102\n");
	else
		printf("Connect faile : %d\n", WSAGetLastError());

	hThread = CreateThread(NULL, 0, ClientThread, (LPVOID)sock, 0, &dwThreadId);

	while (scanf("%s", s) != EOF)
	{
		send(sock, s, strlen(s), 0);
		memset(s, sizeof(s), 0);
	}

	closesocket(sock);
	WSACleanup();
	return 0;
